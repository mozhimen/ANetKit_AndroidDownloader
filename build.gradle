// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'config.gradle'
buildscript {
//    ext {
//        kotlin_version = '1.6.10'
//    }
    repositories {
        gradlePluginPortal()
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        maven { url 'https://gitee.com/liuchaoya/libcommon/raw/master/repository/' }
        maven { url 'https://www.jitpack.io' }
        mavenCentral()
        google()
//        maven {
//            name = "Sonatype-Snapshots"
////            setUrl("https://oss.sonatype.org/content/repositories/snapshots")
//            setUrl("https://s01.oss.sonatype.org/content/repositories/snapshots")
//            credentials(PasswordCredentials.class) {
////                username = property("ossrhUsername").toString()
////                password = property("ossrhPassword").toString()
//            }
//        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.22"
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.18.0'
    }
}

//allprojects {
//    repositories {
//        google()
//        mavenCentral()
//        maven {
//            name = "Sonatype-Snapshots"
////            setUrl("https://oss.sonatype.org/content/repositories/snapshots")
//            setUrl("https://s01.oss.sonatype.org/content/repositories/snapshots")
//            credentials(PasswordCredentials.class) {
////                username = property("ossrhUsername").toString()
////                password = property("ossrhPassword").toString()
//            }
//        }
//
//    }
//}

task clean(type: Delete) {
    delete rootProject.buildDir
}
